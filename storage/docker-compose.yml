version: "3"
services:
  mysql:
    build:
      context: "./app/${MYSQL}"
    container_name: '${PROJECT_NAME}-${MYSQL}'
    restart: 'always'
    ports:
      - "${HOST_MACHINE_MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_INITDB_DIR}:/docker-entrypoint-initdb.d
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${MYSQL_LOG_DIR}:/var/log/mysql
      - ${MYSQL_CONF}:/etc/mysql/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - storage

  redis:
    container_name: '${PROJECT_NAME}-redis'
    image: redis:latest
    volumes:
      - ./app/redis/data:/data
    command:
      redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "${HOST_MACHINE_REDIS_PORT}:6379"
    networks:
      - storage

  phpmyadmin:
    build:
      context: "./app/phpmyadmin"
    container_name: '${PROJECT_NAME}-phpmyadmin'
    environment:
      PMA_HOST: ${HOST_IP}
      PMA_PORT: ${HOST_MACHINE_MYSQL_PORT}
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
      MEMORY_LIMIT: ${MEMORY_LIMIT}
    ports:
      - '${PHP_MY_ADMIN_PORT}:80'
    volumes: 
      - /sessions
      - ${PMA_PHP_INI}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    networks:
      - storage

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin
    container_name: '${PROJECT_NAME}-phpredisadmin'
    environment:
      REDIS_1_HOST: ${REDIS_1_HOST}
      REDIS_1_NAME: MyRedis
      REDIS_1_AUTH: ${REDIS_PASSWORD}
      ADMIN_USER: ${REDIS_ADMIN_USER}
      ADMIN_PASS: ${REDIS_ADMIN_PASS}
    ports:
      - '${REDIS_ADMIN_PORT}:80'
    networks:
      - storage
  postgres:
    image: postgres:10.1
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    ports:
      - ${POSTGRES_DB_PORT}:5432
    volumes:
      - ./app/postgres/initdb/:/docker-entrypoint-initdb.d/
      - ./app/postgres/data:/var/lib/postgresql/data
    networks:
      - storage
  mongo:
    container_name: '${PROJECT_NAME}-mongo'
    image: mongo:5.0.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./app/mongo/data:/data/db
    networks:
      - storage
networks:
  storage:
    driver: bridge