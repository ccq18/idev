version: "3"

services:
  mysql:
    build:
      context: "./app/${MYSQL}"
    container_name: '${COMPOSE_PROJECT_NAME}-${MYSQL}'
    restart: 'always'
    ports:
      - "${HOST_MACHINE_MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_INITDB_DIR}:/docker-entrypoint-initdb.d
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${MYSQL_LOG_DIR}:/var/log/mysql
#      - "${MYSQL_CONF}:/etc/my.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  redis:
    container_name: '${COMPOSE_PROJECT_NAME}-redis'
    image: redis:latest
    volumes:
      - ./app/redis/data:/data
    command:
      redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "${HOST_MACHINE_REDIS_PORT}:6379"

  phpmyadmin:
    build:
      context: "./app/phpmyadmin"
    container_name: '${COMPOSE_PROJECT_NAME}-phpmyadmin'
    environment:
      PMA_HOST: ${HOST_IP}
      PMA_PORT: ${HOST_MACHINE_MYSQL_PORT}
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
      MEMORY_LIMIT: ${MEMORY_LIMIT}
    ports:
      - '${PHP_MY_ADMIN_PORT}:80'
    volumes: 
      - /sessions
      - ${PMA_PHP_INI}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
  phpredisadmin:
    image: erikdubbelboer/phpredisadmin
    container_name: '${COMPOSE_PROJECT_NAME}-phpredisadmin'
    environment:
      REDIS_1_HOST: ${REDIS_1_HOST}
      REDIS_1_NAME: MyRedis
      REDIS_1_AUTH: ${REDIS_PASSWORD}
      ADMIN_USER: ${REDIS_ADMIN_USER}
      ADMIN_PASS: ${REDIS_ADMIN_PASS}
    ports:
      - '${REDIS_ADMIN_PORT}:80'

  postgres:
    image: postgres:10.1
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    ports:
      - ${POSTGRES_DB_PORT}:5432
    volumes:
      - ./app/postgres/initdb/:/docker-entrypoint-initdb.d/
      - ./app/postgres/data:/var/lib/postgresql/data


  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    hostname: zookeeper
    restart: always
    container_name: '${COMPOSE_PROJECT_NAME}-zookeeper'
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1  # 节点ID
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./app/zookeeper/data:/var/lib/zookeeper/data
      - ./app/zookeeper/log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:5.4.1
    hostname: kafka
    restart: always
    container_name: '${COMPOSE_PROJECT_NAME}-kafka'
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - ./app/kafka/data:/var/lib/kafka/data

